version: "3.8"

services:
  # Node.js Backend Service
  nodejs-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - FRONTEND_URL=http://localhost:3000
      - PYTHON_SERVICE_URL=http://python-backend:8000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - redis
    networks:
      - shopify-security-network

  # Python Backend Service
  python-backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - ENVIRONMENT=development
      - FRONTEND_URL=http://localhost:3000
      - NODEJS_SERVICE_URL=http://nodejs-backend:3001
    volumes:
      - ./backend-python:/app
    depends_on:
      - redis
    networks:
      - shopify-security-network

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - shopify-security-network

  # PostgreSQL Database (for future use)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=shopify_security
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopify-security-network

volumes:
  redis_data:
  postgres_data:

networks:
  shopify-security-network:
    driver: bridge
